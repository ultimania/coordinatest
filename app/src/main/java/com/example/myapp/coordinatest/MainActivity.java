package com.example.myapp.coordinatest;

import android.app.Activity;
import android.content.ContentValues;
import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Environment;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * <p>It is an activity class for dress screen.
 * You can wear clothes and accessories for your avatar.
 * You can also start up the camera and register clothes and accessories.
 *
 * <p>This class implements OnClickListener to centrally manage button operations.
 * When adding an operation to a button,
 * please describe the processing in the OnClick method.
 *
 */
public class MainActivity extends AppCompatActivity implements View.OnClickListener {

    static final int REQUEST_CAPTURE_IMAGE = 100;
    ImageView imageview;
    Uri mImageURI;

    /**
     * <p>The onCreate method sets the initial screen.
     * Draw buttons and default avatar.
     * When adding parts to the screen please arrange with this method.
     *
     * @param savedInstanceState
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        imageview = (ImageView) findViewById(R.id.imageView);

        findViewById(R.id.footerButton3).setOnClickListener(this);
    }

    /**
     * <p>This method overrides the definition on onClickListener.
     * Describe the processing when an operation
     * such as tapping occurs for each part on the screen.
     * Please distinguish the id described in xml for each part .
     *
     * @param v
     */
    @Override
    public void onClick(View v){
        mImageURI = getPhotoUri();
        switch(v.getId()) {
            // Activate the camera to acquire and draw photographed pictures.
            case R.id.footerButton3:
                Intent intent = new Intent(
                    MediaStore.ACTION_IMAGE_CAPTURE
                );
                intent.addCategory(Intent.CATEGORY_DEFAULT);
                intent.putExtra(MediaStore.EXTRA_OUTPUT, mImageURI);
                startActivityForResult(intent, REQUEST_CAPTURE_IMAGE);
                break;
            default:
                break;
        }
    }

    /**
     * <p>In addition to the pictures taken with the camera,
     * generate a path to the storage where the files generated by the application are saved.
     *
     * <p>Create a folder with a package name in the external publishing area
     * and save various files under that folder.
     *
     * <p>Please describe the processing in this method
     * when generating a path to save to other than photographs.
     *
     * @return dirPath - Save destination path
     */
    private String getDirPath(){
        String dirPath = "";
        File photoDir = null;
        File extStorageDir = Environment.getExternalStorageDirectory();

        if(extStorageDir.canWrite()){
            photoDir = new File(extStorageDir.getPath() + "/" + getPackageName());
        }
        if(photoDir != null){
            if(!photoDir.exists()){
                photoDir.mkdirs();
            }
            if(photoDir.canWrite()){
                dirPath = photoDir.getPath();
            }
        }

        return dirPath;
    }


    private Uri getPhotoUri() {
        long currentTimeMillis = System.currentTimeMillis();
        Date today = new Date(currentTimeMillis);
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd_HHmmss");
        String title = dateFormat.format(today);
        String dirPath = getDirPath();
        String fileName = "samplecameraintent_" + title + ".jpg";
        String path = dirPath + "/" + fileName;
        File file = new File(path);
        ContentValues values = new ContentValues();
        values.put(MediaStore.Images.Media.TITLE, title);
        values.put(MediaStore.Images.Media.DISPLAY_NAME, fileName);
        values.put(MediaStore.Images.Media.MIME_TYPE, "image/jpeg");
        values.put(MediaStore.Images.Media.DATA, path);
        values.put(MediaStore.Images.Media.DATE_TAKEN, currentTimeMillis);
        if (file.exists()) {
            values.put(MediaStore.Images.Media.SIZE, file.length());
        }
        Uri uri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);
        return uri;
    }

    /**
     * <p>This method gets data from the activity at the transition destination.
     *
     * <p>For example, it is used to acquire photograph data taken
     * when the camera is activated.
     *
     * <p>If you add a transition to another activity,
     * please describe the process when returning
     * from the transition destination to this method.
     *
     * @param requestCode
     * @param resultCode
     * @param data
     */
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data){
        if(requestCode == REQUEST_CAPTURE_IMAGE && resultCode == Activity.RESULT_OK){
            Bitmap caputuredImage = (Bitmap)data.getExtras().get("data");
            imageview.setImageBitmap(caputuredImage);
        }
    }
}
